/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as GlooApi from "../../..";
export declare namespace Classifiers {
    interface Options {
        environment?: core.Supplier<environments.GlooApiEnvironment | string>;
        token: core.Supplier<core.BearerToken>;
        xGlooTag?: core.Supplier<string | undefined>;
        xGlooOrg?: core.Supplier<string | undefined>;
        fetcher?: core.FetchFunction;
    }
}
export declare class Classifiers {
    protected readonly _options: Classifiers.Options;
    constructor(_options: Classifiers.Options);
    /**
     * @throws {@link GlooApi.NotAuthorized}
     * @throws {@link GlooApi.NotFound}
     * @throws {@link GlooApi.BadRequest}
     */
    classify(classifierId: string, request: GlooApi.ClassificationRequest): Promise<GlooApi.ClassificationResponse>;
    protected _getAuthorizationHeader(): Promise<string>;
}
