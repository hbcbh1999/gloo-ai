# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class Status(str, enum.Enum):
    PASS = "PASS"
    FAIL = "FAIL"
    FAIL_PARENT = "FAIL_PARENT"

    def visit(
        self,
        pass_: typing.Callable[[], T_Result],
        fail: typing.Callable[[], T_Result],
        fail_parent: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is Status.PASS:
            return pass_()
        if self is Status.FAIL:
            return fail()
        if self is Status.FAIL_PARENT:
            return fail_parent()
